/// - `content-box` — основывается на стандартах CSS,
/// при этом свойства `width` и `height` задают ширину и
/// высоту содержимого и не включают в себя значения
/// `margin`, `padding` и `border`.
///
/// - `border-box` — свойства `width` и `height` включают
/// в себя значения `padding` и `border`, но не `margin`.
/// ---
/// @name vvalues--box-sizing
/// @group Configs
/// @since 7.0.0
/// @access public
/// @type list
$vvalues--box-sizing: border-box content-box inherit initial revert revert-layer unset !default;

/// - `no-preference` — настройки контрастности по умолчанию
/// - `more` — контрастность увеличена
/// - `less` — контрастность понижена
/// - `custom` — выбран режим принудительных цветов. Например, режим высокой контрастности Windows
/// ---
/// @name vvalues--media-prefers-contrast
/// @group Configs
/// @since 7.0.0
/// @access public
/// @type list
$vvalues--media-prefers-contrast: no-preference more less custom !default;

/// #### `flat`
/// Дочерние элементы лежат в плоскости экрана.
///
/// #### `preserve-3d`
/// Дочерние элементы будут отображаться в 3D-пространстве.
/// ---
/// @name vvalues--transform-style
/// @group Configs
/// @since 7.0.0
/// @access public
/// @type list
$vvalues--transform-style: preserve-3d flat inherit initial unset !default;

/// #### `ease`
/// Анимация начинается медленно, затем ускоряется и к концу
/// движения опять замедляется. Аналогично `cubic-bezier(0.25,0.1,0.25,1)`.
///
/// #### `ease-in`
/// Анимация медленно начинается, к концу ускоряется.
/// Аналогично `cubic-bezier(0.42,0,1,1)`.
///
/// #### `ease-out`
/// Анимация начинается быстро, к концу замедляется.
/// Аналогично `cubic-bezier(0,0,0.58,1)`.
///
/// #### `ease-in-out`
/// Анимация начинается и заканчивается медленно.
/// Аналогично `cubic-bezier(0.42,0,0.58,1)`.
///
/// #### `linear`
/// Одинаковая скорость от начала и до конца.
///
/// #### `step-start`
/// Как таковой анимации нет. Стилевые свойства сразу же
/// принимают конечное значение.
///
/// #### `step-end`
/// Как таковой анимации нет. Стилевые свойства находятся в
/// начальном значении заданное время, затем сразу же принимают
/// конечное значение.
///
/// #### `steps`
/// Ступенчатая функция, имеющая заданное число шагов.
/// `transition-timing-function: steps(<число>, start | end)`
/// Здесь: `<число>` — целое число больше нуля; `start` — задаёт
/// полунепрерывную снизу функцию; `end` — задаёт полунепрерывную
/// сверху функцию.
///
/// #### `cubic-bezier`
/// Задаёт функцию движения в виде [кривой Безье](http://ru.wikipedia.org/wiki/%D0%9A%D1%80%D0%B8%D0%B2%D0%B0%D1%8F_%D0%91%D0%B5%D0%B7%D1%8C%D0%B5).
/// ---
/// @name vvalues--transition-timing-function
/// @group Configs
/// @since 7.0.0
/// @access public
/// @link https://webref.ru/css/transition-timing-function WebReference
/// @type list
$vvalues--transition-timing-function: ease ease-in ease-out ease-in-out linear step-start step-end "steps()" "cubic-bezier()" "Multiple timing functions (~ ease, cubic-bezier(0.1, 0.7, 1, 0.1))" inherit initial revert revert-layer unset !default;

/// @name vvalues--transition-duration
/// @group Configs
/// @since 7.0.0
/// @access public
/// @type list
$vvalues--transition-duration: "Time (1s, 5ms, .2ms)" inherit initial revert revert-layer unset !default;

/// @name vvalues--transition-delay
/// @group Configs
/// @since 7.0.0
/// @access public
/// @type list
$vvalues--transition-delay: "Time (1s, 5ms, .2ms)" inherit initial unset !default;

/// @name vvalues--border-radius
/// @group Configs
/// @since 7.0.0
/// @access public
/// @type list
$vvalues--border-radius: "Number" "Length (px, rem, em, etc.)" "Percentage (0% - 100%)" inherit initial unset !default;

/// @name vvalues--opacity
/// @group Configs
/// @since 7.0.0
/// @access public
/// @type list
$vvalues--opacity: "Number (0.0 - 1.0)" "Percentage (0% - 100%)" !default;

/// @name vvalues--position-sticky__sides
/// @group Configs
/// @since 7.0.0
/// @access public
/// @type list
$vvalues--position-sticky__sides: top right bottom left !default;

/// #### `static`
/// Это значение позволяет элементу находиться в обычном его
/// состоянии, расположенном на своём месте в документе. Свойства
/// `top`, `right`, `bottom`, `left` и `z-index` не применяются к данному
/// элементу. Это значение по умолчанию.
///
/// #### `relative`
/// Элемент позиционируется в соответствии с нормальным потоком
/// документа, а затем смещается относительно себя на основе
/// значений `top`, `right`, `bottom` и `left`. Смещение не влияет на положение
/// любых других элементов; таким образом, пространство, заданное для
/// элемента в макете страницы, такое же, как если бы позиция была `static`.
/// Это значение создаёт новый [контекст наложения](https://developer.mozilla.org/ru/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context),
/// когда значение `z-index` не `auto`. Его влияние на элементы `table-*-group`,
/// `table-row`, `table-column`, `table-cell` и `table-caption` не определено.
///
/// #### `absolute`
/// Элемент удаляется из обычного потока документов, и для элемента в макете страницы
/// не создаётся пробела. Он расположен относительно его ближайшего относительно
/// позиционированного предка, если таковой имеется; в противном случае он
/// помещается относительно исходного [содержащего блока](https://developer.mozilla.org/ru/docs/Web/CSS/Containing_block).
/// Его конечная позиция определяется значениями `top`, `right`, `bottom`, и `left`.
/// Это значение создаёт новый [контекст наложения](https://developer.mozilla.org/ru/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context),
/// когда значение `z-index` не `auto`. Поля абсолютно позиционированных коробок не
/// [сворачиваются](https://developer.mozilla.org/ru/docs/Web/CSS/CSS_Box_Model/Mastering_margin_collapsing) с другими полями.
///
/// #### `fixed`
/// Элемент выбивается из обычного потока документа, и для элемента в макете страницы
/// не создаётся пространство. Он позиционируется относительно исходного [содержащего блока](https://developer.mozilla.org/ru/docs/Web/CSS/Containing_block),
/// установленного [`viewport`](https://developer.mozilla.org/ru/docs/Glossary/Viewport), за
/// исключением случаев, когда один из его предков имеет свойство `transform`, `perspective`,
/// или `filter`, установленное на что-то иное, кроме none (см. [CSS Transforms Spec](https://www.w3.org/TR/css-transforms-1/#propdef-transform)), и
/// в этом случае этот предок ведёт себя как содержащий блок. (Обратите внимание,
/// что существуют несогласованности браузера с `perspective` и `filter`, способствующими
/// содержанию формирования блоков.) Его конечная позиция определяется значениями `top`,
/// `right`, `bottom` и `left`. Это значение всегда создаёт новый [контекст наложения](https://developer.mozilla.org/ru/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context).
/// В печатных документах элемент помещается в одно и то же положение на каждой странице.
///
/// #### `sticky`
/// Элемент позиционируется в соответствии с нормальным потоком документа, а затем
/// смещается относительно его ближайшего прокручивающего предка и [содержащего блока](https://developer.mozilla.org/ru/docs/Web/CSS/Containing_block)
/// (ближайший родительский уровень блока), включая элементы, связанные с таблицей,
/// на основе значений `top`, `right`, `bottom`, и `left`. Смещение не влияет на положение любых других
/// элементов.Это значение всегда создаёт новый [контекст наложения](https://developer.mozilla.org/ru/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context).
/// Обратите внимание, что липкий элемент «прилипает» к его ближайшему предшественнику, имеющему
/// «механизм прокрутки» (созданный при `overflow` равном `hidden`, `scroll`, `auto` или `overlay`), даже
/// если тот не является ближайшим фактически прокручивающим предком. Это эффективно препятствует
/// любому «липкому» поведению (см. [Github issue on W3C CSSWG](https://github.com/w3c/csswg-drafts/issues/865)).
/// ---
/// @name vvalues--position
/// @group Configs
/// @since 7.0.0
/// @access public
/// @type list
$vvalues--position: static relative absolute fixed sticky inherit initial revert revert-layer unset !default;

/// @name vvalues--tab-size
/// @group Configs
/// @since 7.0.0
/// @access public
/// @type list
$vvalues--tab-size: '<Number>' inherit initial revert revert-layer unset !default;

/// @name vvalues--size
/// @group Configs
/// @since 7.0.0
/// @access public
/// @type list
$vvalues--size: normal max min !default;

/// #### `none`
/// Текст элемента и вложенных в него элементов не
/// выбирается. Обратите внимание, что объект [Selection](https://developer.mozilla.org/ru/docs/Web/API/Selection)
/// может содержать эти элементы.
///
/// #### `auto`
/// Вычисляемое значение, автоматически определяется следующим образом:
/// - Для псевдо-элементов `::before` и `::after` вычисляемое значение - `none`
/// - Если элемент является редактируемым, вычисляемое значение - `contain`
/// - Иначе, если вычисляемое значение `user-select` для родителя
/// этого элемента - `all`, вычисляемое значение - `all`
/// - Иначе, если вычисляемое значение `user-select` для родителя
/// этого элемента - `none`, вычисляемое значение - `none`
/// - Иначе, вычисляемое значение - `text`
///
/// #### `text`
/// Текст может быть выбран пользователем.
///
/// #### `all`
/// В HTML-редакторе, если двойной клик или контекстный клик
/// произошёл во вложенном элементе, будет выбрано все содержимое
/// коренного предка с этим значением свойства.
///
/// #### `contain`
/// Позволяет начать выбор внутри элемента; однако, выбор
/// будет содержаться внутри границ данного элемента.
/// ---
/// @name vvalues--user-select
/// @group Configs
/// @since 7.0.0
/// @access public
/// @link https://developer.mozilla.org/ru/docs/Web/CSS/user-select user-select - CSS | MDN
/// @type list
$vvalues--user-select: auto none text all contain inherit initial revert revert-layer unset !default;
