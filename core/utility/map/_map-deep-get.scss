@use 'sass:map';
@use '../validator/is-map' as *;
@use '../../../config' as config;
@use '../../../devpack/invalid-value-message' as *;

/// Функция `map-deep-get` получает какое-либо значение
/// из указанной карты (`Map`).
/// ---
/// @name map-deep-get
/// @group core
/// @since 8.0.0
/// @access public
/// @author Kitty Giraudel
/// @link https://github.com/KittyGiraudel GitHub
/// @example scss Пример использования в Sass (SCSS)
/// 	$breakpoints: (
/// 		xs: (min-width: 0),
/// 		sm: (min-width: 576px),
/// 		md: (min-width: 768px),
/// 		lg: (min-width: 992px),
/// 		xl: (min-width: 1200px),
/// 		xxl: (min-width: 1400px)
/// 	) !default;
///
/// 	@debug map-deep-get($breakpoints, xxl); //=> (min-width: 1400px)
/// @return {map} карта со значениями
/// @param {map} $map - карта (`Map`), значения которой нужно получить
/// @param {string} $keys... - ключи, которые надо получить
@function map-deep-get($map, $keys...) {

	$-key: null;

	@if is-map($map) {
		// Прохожу циклом по карте и забираю значение:
		@each $key in $keys {
			$map: map-get($map, $key);
			$-key: $key;
		}
	} @else {
		@return invalid-value-message('map-deep-get', $map, 'Map');
	}

	// Показываю предепреждение в консоль, если
	// ключ `$-key` равен `null`:
	@if type-of($map) == 'null' {

		$-error-message: '#{config.$string--error__map-deep-get} «#{$-key}».';

		@if config.$setting--strict-mode == true {
			@error $-error-message;
		} @else {
			@warn $-error-message;
		}

	}

	// Возвращаю значение из карты:
	@return $map;


}
