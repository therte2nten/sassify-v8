@use 'sass:map';

/// –§—É–Ω–∫—Ü–∏—è `map-deep-set` —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–∞–∫–æ–µ-–ª–∏–±–æ –∑–Ω–∞—á–µ–Ω–∏–µ
/// –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –∫–∞—Ä—Ç—É (`Map`).
/// ---
/// @name map-deep-set
/// @since 7.0.0
/// @access public
/// @author Kitty Giraudel
/// @link https://github.com/KittyGiraudel GitHub
/// @example scss –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ Sass (SCSS)
/// 	@debug
/// @example –†–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫–æ–Ω—Å–æ–ª–∏
/// 	Debug:
/// @return {Map} –∫–∞—Ä—Ç–∞ —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
/// @param {Map} $map - –∫–∞—Ä—Ç–∞ (`Map`), –≤ –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è
/// @param {String} $keys - –∫–ª—é—á –∑–Ω–∞—á–µ–Ω–∏—è
/// @param {*} $value - –∑–Ω–∞—á–µ–Ω–∏–µ
@function map-deep-set($map, $keys, $value) {

  $_maps: ($map,);
  $_result: null;

  // –ï—Å–ª–∏ –≤–≤–µ–¥—ë–Ω—ã–π –∫–ª—é—á —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∫–∞—Ä—Ç–æ–π,
  // —Ç–æ –æ–ø–æ–≤–µ—â–∞—é —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –æ —Ç–æ–º, —á—Ç–æ –æ–Ω–∞ –±—É–¥–µ—Ç
  // –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞:
  @if type-of(nth($keys, -1)) == "map" {
		@warn "üü® –ü–æ—Å–ª–µ–¥–Ω–∏–π —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–ª—é—á ‚Äî —ç—Ç–æ –∫–∞—Ä—Ç–∞. –û–Ω –±—É–¥–µ—Ç –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω —Å –ø–æ–º–æ—â—å—é `#{$value}`.";
	}

  // –ï—Å–ª–∏ `$keys` - —ç—Ç–æ –æ–¥–∏–Ω –∫–ª—é—á, —Ç–æ
  // –ø—Ä–æ—Å—Ç–æ –æ–±—ä–µ–¥–∏–Ω—è—é –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é –µ–≥–æ:
  @if length($keys) == 1 {
    @return map-merge($map, ($keys: $value));
  }

  // –ü—Ä–æ—Ö–æ–∂—É —Ü–∏–∫–ª–æ–º `@for` –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –¥–æ –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–ª—é—á–∞
  // –∏–∑ `$keys`.
  // –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Å–≤—è–∑–∞–Ω–Ω—É—é –∫–∞—Ä—Ç—É —Å —ç—Ç–∏–º –∫–ª—é—á–æ–º –≤ —Å–ø–∏—Å–∫–µ `$_maps`
  @for $i from 1 through length($keys) - 1 {

    $_current-key: nth($keys, $i);
    $_current-map: nth($_maps, -1);
    $_current-get: map-get($_current-map, $_current-key);

    // –ï—Å–ª–∏ –∫–ª—é—á –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤—ã–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:
    @if $_current-get == null {
      @error "üü• –ö–ª—é—á `#{$keys}` –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ —Ç–µ–∫—É—â–µ–º —É—Ä–æ–≤–Ω–µ –∫–∞—Ä—Ç—ã!";
    }

    $_maps: append($_maps, $_current-get);
  }

  // –¶–∏–∫–ª –æ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–π –∫–∞—Ä—Ç—ã –∫ –ø–µ—Ä–≤–æ–π.
  // –û–±—ä–µ–¥–∏–Ω—è–µ–º –µ–≥–æ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º:
  @for $i from length($_maps) through 1 {

    $_current-map: nth($_maps, $i);
    $_current-key: nth($keys, $i);
    $_current-val: if($i == length($_maps), $value, $_result);

    $_result: map-merge($_current-map, ($_current-key: $_current-val));

  }

  // –í–æ–∑–≤—Ä–∞—â–∞—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
  @return $_result;

}
