@use '../../../config' as config;
@use '../../../common/invalid-value-message' as *;
@use '../../utility/is-list-contains' as *;
@use '../prefixer' as *;

/// Миксин `position` позволяет указать тип позиционирования
/// одной строкой.
/// ---
/// @name position
/// @group core/
/// @since 7.0.0
/// @access public
/// @author Haba Kudzaev (therteenten)
/// @link https://github.com/therteenten/sassify/blob/develop/core/mixin/position/_index.scss Исходный код миксина
/// @example scss Пример использования в Sass (SCSS)
/// 	.block-absolute {
/// 		@include position(relative, 40px, 40px);
/// 	}
///
/// 	.block-relative {
/// 		@include position(relative, 40px, null, null, 40px);
/// 	}
///
/// 	.block-static {
/// 		@include position(static);
/// 	}
///
/// 	.block-sticky {
/// 		@include position(sticky, 20px);
/// 	}
/// @example css Результат работы миксина в CSS
/// 	.block-absolute {
/// 		position: relative;
/// 		top: 40px;
/// 		right: 40px;
/// 	}
///
/// 	.block-relative {
/// 		position: relative;
/// 		top: 40px;
/// 		left: 40px;
/// 	}
///
/// 	.block-static {
/// 		position: static;
/// 	}
///
/// 	.block-sticky {
/// 		position: -webkit-sticky;
/// 		position: sticky;
/// 		top: 20px;
/// 	}
/// @param {String} $position [config.$dvalues--position] - тип позиционирования
/// @param {String} $top [null] - конечное местоположение элемента относительно верхней стенки
/// @param {String} $right [null] - конечное местоположение элемента относительно правой стенки
/// @param {String} $bottom [null] - конечное местоположение элемента относительно низа
/// @param {String} $left [null] - конечное местоположение элемента относительно левой стенки
@mixin position($position: config.$dvalues--position, $top: null, $right: null, $bottom: null, $left: null) {

	// С помощью функции `is-list-contains` проверяем
	// наличие значения `$position` в списке `config.$vvalues--position`:
	@if is-list-contains($position, config.$vvalues--position) {

		// Если значение из `$position` есть в
		// списке `config.$vvalues--position`,
		// то присваиваем CSS-свойству `position` значение
		// из параметра `$position`:
		@if $position == sticky {

			// > Если значение `$position` равно `sticky`,
			// > то добавляем к значению браузерный префикс
			// > с помощью миксина `prefixer`.
			@include prefixer(
				position,
				sticky,
				config.$prefixes--position-sticky,
				true,
				true
			);

		} @else {
			position: $position;
		}

	}

	// Если значения из параметра `$position` нет в списке `$position` в
	// списке `config.$vvalues--position`, то отображаем сообщение об этом:
	@else {
		@include invalid-value-message('position', $position, config.$vvalues--position);
	}

	top     : $top;
	right   : $right;
	bottom  : $bottom;
	left    : $left;

}
