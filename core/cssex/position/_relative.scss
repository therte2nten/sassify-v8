@use './index' as *;

/// Миксин `position-relative` позволяет указать тип позиционирования `relative`
/// одной строкой.
///
/// Элемент позиционируется в соответствии с нормальным потоком
/// документа, а затем смещается относительно себя на основе
/// значений `top`, `right`, `bottom` и `left`. Смещение не влияет на положение
/// любых других элементов; таким образом, пространство, заданное для
/// элемента в макете страницы, такое же, как если бы позиция была `static`.
/// Это значение создаёт новый [контекст наложения](https://developer.mozilla.org/ru/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context),
/// когда значение `z-index` не `auto`. Его влияние на элементы `table-*-group`,
/// `table-row`, `table-column`, `table-cell` и `table-caption` не определено.
/// ---
/// @name position-relative
/// @group core-cssex
/// @since 8.0.0
/// @access public
/// @author Haba Kudzaev (therteenten)
/// @link https://github.com/therteenten/sassify/blob/develop/core/cssex/position/_relative.scss Исходный код миксина
/// @example scss Пример использования в Sass (SCSS)
/// 	.block-position-relative {
/// 		@include position-relative(15px, null, null, 15px);
/// 	}
/// @example css Результат работы миксина в CSS
/// 	.block-position-relative {
/// 		position: relative;
/// 		top: 15px;
/// 		left: 15px;
/// 	}
/// @param {string | number} $side-top [null]
/// @param {string | number} $side-right [null]
/// @param {string | number} $side-bottom [null]
/// @param {string | number} $side-left [null]
@mixin position-relative(
	$side-top: null,
	$side-right: null,
	$side-bottom: null,
	$side-left: null) {

	@include position(
		relative,
		$side-top,
		$side-right,
		$side-bottom,
		$side-left
	);

}
