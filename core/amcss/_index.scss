@use '../../config' as config;

/// Немного про AMCSS:
/// Название подхода означает «Модули атрибутов для CSS» (Attribute Modules for CSS).
/// Это достаточно необычный подход, упоминания которого,
/// тем не менее, все чаще встречаются в блогах гуру разработки.
/// Этот миксин позволяет писать стили с учетом методологии намного проще.
/// ---
/// @name amcss
/// @group core/
/// @since 7.0.0
/// @access public
/// @author W3cplus
/// @link http://sassmeister.com/gist/2709da070d6aac25a9f5 Песочница для теста
/// @link https://github.com/W3cplus/SassMagic/blob/master/src/mixins/_amcss.scss Исходный код
/// @link https://habr.com/ru/post/256109/ Описание методологии на Хабре
/// @example scss Пример использования в Sass (SCSS)
/// 	@include amcss(module) {
/// 		color: red;
/// 	}
///
/// 	@include amcss(module, blue) {
/// 		color: blue;
/// 	}
///
/// 	@include amcss(module, large) {
/// 		font-size: 2em;
/// 	}
/// @example css Результат в CSS
/// 	[am-module] {
/// 		color: red;
/// 	}
///
/// 	[am-module~="blue"] {
/// 		color: blue;
/// 	}
///
/// 	[am-module~="large"] {
/// 		font-size: 2em;
/// 	}
/// @param {string} $module - название модуля
/// @param {string | number} $trait [null] - значение модуля
/// @param {string} prefix [config.$dvalues--amcss__prefix] - префикс для атрибута
@mixin amcss(
	$module,
	$trait: null,
	$prefix: config.$dvalues--amcss__prefix) {

	@if $trait != null {
		[#{$prefix}#{$module}~="#{$trait}"]{
			@content;
		}
	}

	@else {
		[#{$prefix}#{$module}]{
			@content;
		}
	}

}
